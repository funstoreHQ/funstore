#!/bin/bash

# Installation file for funstore
# Coyright mLabs Research Inc., 2014


# Basic Settings ####
VERSION=v0.0.2
BOARD="raspberrypi"
MODIFIED="Sept 15, 2014"
BINDIR=/usr/bin
fileName=`basename $0`
CURL="/usr/bin/curl"
PHP="/usr/bin/php5"
APACHE="/usr/sbin/apache2"
JQ="/usr/local/bin/jq"
TEMPVAR=""

checkVersion()
{
    if [ "$BASH_VERSION" = '' ]; then
        clear
        printf "Error!!!\n\n\nPlease execute \"chmod +x "$fileName"\" and then run \"./"$fileName"\".  \n\n"
        exit
    fi
}

updateAptitude()
{
    echo "Updating Aptitude"
    sudo apt-get -y update
}

getCurl()
{
    if [ -f $CURL ];then echo ""
    else
       echo "$CURL command is not installed."
       echo "Running sudo apt-get install curl"
       sudo apt-get -y install curl
       TEMPVAR = "1";
    fi

    if [ "$TEMPVAR" = "1" ]; then exit; fi
}

getApache()
{
    if [ -f $APACHE ];then echo ""
    else
       echo "$APACHE command is not installed."
       echo "Running sudo apt-get install apache"
              sudo apt-get -y install apache2
       TEMPVAR = "1";
    fi

    if [ "$TEMPVAR" = "1" ]; then exit; fi
}

getPHP()
{
    if [ -f $PHP ];then echo ""
    else
       echo "$PHP command is not installed."
       echo "Running sudo apt-get install php"
       sudo apt-get install -y php5
       TEMPVAR = "1";
    fi

    if [ "$TEMPVAR" = "1" ]; then exit; fi
}

getDependencies()
{
sudo apt-get -y install libapache2-mod-php5 
sudo apt-get -y install libapache2-mod-perl2 
sudo apt-get -y install php5-cli 
sudo apt-get -y install php5-cgi
sudo apt-get -y install php5-common 
sudo apt-get -y install php5-curl 
sudo apt-get -y install php5-dev 
sudo apt-get -y install php5-gd
sudo apt-get -y install php5-imap 
sudo apt-get -y install php5-ldap 
sudo apt-get -y install php5-mhash 
sudo apt-get -y install php5-mysql 
sudo apt-get -y install php5-odbc
sudo apt-get -y install php5-sqlite
sudo apt-get -y install msmtp 
sudo apt-get -y install msmtp-mta 
sudo apt-get -y install ca-certificates
sudo apt-get -y install wget dos2unix
sudo apt-get -y install avahi-daemon
}

getNode()
{
wget http://node-arm.herokuapp.com/node_latest_armhf.deb 
sudo dpkg -i node_latest_armhf.deb
sudo rm node_latest_armhf.deb
sudo apt-get install -y build-essential python-dev python-rpi.gpio
}

funstoreSetup()
{
cd /var/www
echo "We will get some files from internet to work for you"
sudo wget funstore.io/setup/$BOARD/funstore.zip
sudo unzip funstore.zip
sudo chmod -fR 755 funstore
cd funstore/ajax
sudo touch tmpscript.sh
sudo chmod 775  tmpscript.sh
sudo chown -fR www-data:www-data /var/www/funstore
cd ..
}

editSudoer()
{
  echo "to be done"
}

getDashboard()
{
  cd /var/www/funstore
  sudo wget funstore.io/setup/$BOARD/dashboard.zip
  sudo unzip dashboard.zip
  cd /var/www
  sudo rm index.html
  sudo cp /var/www/funstore/dashboard/index-main.html index.html
  sudo sed -i 's/raspberrypi/funstore/' /etc/hostname
  sudo sed -i 's/raspberrypi/funstore/' /etc/hosts
  sudo /etc/init.d/avahi-daemon restart
}

npmInstall()
{
    cd /var/www/funstore/
    sudo npm install 
}

nodeSetup()
{
    cd /var/www/funstore/
    npm install
}

nodeLaunch()
{
    cd /var/www/funstore
    node device.js
}

getGrovePi()
{
  cd /var/www/funstore
  sudo git clone https://github.com/DexterInd/GrovePi
  cd GrovePi/Script
  sudo chmod +x install.sh
  sudo ./install.sh
}

getWL()
{
  cd /var/www/funstore
  sudo wget funstore.io/setup/$BOARD/WL.tar.gz
  sudo tar -zxvf WL.tar.gz
  sudo chmod +x install
  sudo ./install
}

getjq()
{
    if [ -f $JQ ];then echo ""
    else
    sudo git clone https://github.com/stedolan/jq.git
    cd jq
    sudo autoreconf -i
    sudo ./configure
    sudo make
    sudo make install
    fi
}

main()
{
clear
checkVersion
updateAptitude
getCurl
getApache
getPHP
getDependencies
getNode
funstoreSetup
npmInstall
getWL
getjq
nodeSetup
echo "If you can see connected on your online account, this means all is well"
nodeLaunch
getDashboard
getGrovePi
}
main
